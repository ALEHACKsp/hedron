#!/usr/bin/env expect

if { $argc < 1 || $argc > 4 } {
    puts "Usage: qemu-boot <file> \[OPTION\]"
    puts "Boot NOVA using qemu. FILE is expected to be <hypervisor.elf32> unless specified different by an option."
    puts "Options:"
    puts "  -i FILE is a disk image using multiboot2 to boot NOVA"
    puts "  -e [Firmware] Boot in UEFI mode [using <Firmware> as path for firmware files]"
    exit 1
}

set cpus 4
set boot_file [lindex $argv 0]
set common_args "-smp $cpus -machine q35,accel=tcg -cpu Westmere -m 2048 -serial stdio -net none -display none"

if { $argc >= 2 && [lindex $argv 1] == "-i" } {
    set args "-drive format=raw,snapshot=on,file=$boot_file"
} else {
    set kernel_args serial
    set args "-kernel $boot_file -append $kernel_args"
}

set bios ""
set fv "/usr/share/OVMF"
if { $argc == 4 } {
    set fv [lindex $argv 3]
}

if { $argc >= 3 && [lindex $argv 2] == "-e" } {
    if {![file exists $fv/OVMF_CODE.fd] || ![file exists $fv/OVMF_VARS.fd]} {
        puts "OVMF_CODE.fd or OVMF_VARS.fd not found in $fv"; exit 1;
    }
    set bios "-drive if=pflash,format=raw,readonly,file=$fv/OVMF_CODE.fd -drive if=pflash,format=raw,readonly,file=$fv/OVMF_VARS.fd"
}

eval spawn qemu-system-x86_64 $common_args $args $bios

# Consider timeouts and early EOFs as failure.
expect_before {
    timeout { puts "Failed: Timeout";   exit 1 }
    eof     { puts "Failed: Early EOF"; exit 2 }
}

# Qemu might take some time to come up.
set timeout 60
if { $argc == 2 && [lindex $argv 1] == "-i" } {
    expect -re "NOVA Microhypervisor.*\[MBI2\]"
} else {
    expect -re "NOVA Microhypervisor.*\[MBI\]"
}

# After NOVA has checked in, everything is very quick.
set timeout 5

# All cores check in. The come up in unspecified order.
for {set i 0} {$i < $cpus} {incr i} {
    expect "CORE:"
}

# We die, because no roottask is specified.
expect -re "Killed EC:.*\(No ELF\)"

close
