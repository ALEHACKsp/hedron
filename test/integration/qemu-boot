#!/usr/bin/env expect

if { $argc < 1 || $argc > 2 } {
    puts "Usage: expect -f qemu-boot.tcl <file> \[OPTION\]"
    puts "Boot NOVA using qemu. FILE is expected to be <hypervisor.elf32> unless specified different by an option."
    puts "Options:"
    puts "  -i FILE is a disk image"
    exit 1
}

set cpus 4
set boot_file [lindex $argv 0]
set common_args "-smp $cpus -machine q35,accel=tcg -cpu Westmere -m 2048 -serial stdio -display none -net none"

if { $argc == 2 && [lindex $argv 1] == "-i" } {
    set args "-drive format=raw,file=$boot_file"
} else {
    set kernel_args serial
    set args "-kernel $boot_file -append $kernel_args"
}

eval spawn qemu-system-x86_64 $common_args $args

# Consider timeouts and early EOFs as failure.
expect_before {
    timeout { puts "Failed: Timeout";   exit 1 }
    eof     { puts "Failed: Early EOF"; exit 2 }
}

# Qemu might take some time to come up.
set timeout 60
expect "NOVA Microhypervisor"

# After NOVA has checked in, everything is very quick.
set timeout 5

# All cores check in. The come up in unspecified order.
for {set i 0} {$i < $cpus} {incr i} {
    expect "CORE:"
}

# We die, because no roottask is specified.
expect -re "Killed EC:.*\(No ELF\)"

close
